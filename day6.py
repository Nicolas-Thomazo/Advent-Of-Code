# %%
import matplotlib.pyplot as plt
import numpy as np

array="""...#........................................#........#.................#............#.#.......................#...............#..#
...#........#.....#..................................................................................#......#..#..................
.................#.......................#.#........#......#...........................................#...#..........#...........
..................#..................#...#.....................................#........#.........................................
...#.....#.......#..............#.#....##.............#....##......................................#...................#..........
...#..........................................................................................................................#...
..#..#.............#.....#...............#.......#..............................................#....#............................
......................#..#...............#...................#....#..........................#...#............#...#....##.........
..#.#.........#................#............#............#.#.......#................#....#..#.....................................
.......................................................................#.....................................#...........#........
...........#.....................................................................#.................................#......#.......
...#.........#....................................................#..............#.............#..........#.......................
.................................................................................................#................................
..................................#.#.#...#.......#.............#.......................#..#.......................#.#............
.......................#.........................................#..........#...#.....#....................................#......
.......#.......#.#...........#......................#.....#..#...#.#...............#.............................#...#............
............##...#......#.........#......#............................................................#.........#..............#..
..#........................................#........##..#...............................................................#.........
...........#..............##................................................................................#.....................
..#................................................................................#..............#...............................
...................................##..............#..........................#.......#..#...............#........#...............
....#............#.........................#................................................................#........#............
............#.....................................................................#.............................................#.
............#..........#.......#...........#.#......#..............#.........#.......................................#......#.....
..#...............................................#..................................#.............................#.............#
.........................................................................#........#................#......#.......#....#........#.
.......................................................................#.....##.................................................#.
..............#.............#...........................#...#..#....................................................#.............
.......#..........................#.......................###..................................#.....................#..#.........
................#.................#.............#......................................................................#........#.
.#.....#................#......................................................................#................#.................
................................#........................#........#..#........................#...................................
..............................................................................................#.....................#.........#...
..................#.................#.........................#.....#................#............................................
......#...................#...#...................#..................#...........................#......###...................#...
.............................##.....#..............#..............................................................#....#..........
......#..................#....................................................###....................#..............#.............
............#...#..................#........#.............#..............................#.........#..........................#...
....#...............................#......#......#...............#.#......#............#...................................#.....
.......#...................................#.#.#.........................................................#..................#.....
.....................#.......#.#......#.#.....................#...................................................................
......#.....#............................................................................#............#.......#..#................
..........#.#......#...................................#....#.#............##.....................................................
...............#........................#..................................#...........#...................................#......
.#....................................................#.......................................................................#...
......#.........................................#...#.........................................#........#..........................
.........................................#..........#.............................................................................
...................#.....................................#.....................#..#............#....#........................##...
.................................#.........#.............#.............................#...........................#...#..........
..#................................................................#.....#....#.................................#.................
........#................#............#.#..........................................#..............................................
..#...........##.....................#..#..........................#...#...#....#.................................................
................................................................................#.................................................
............#...........#.........#....#.........................................................................#................
.............................#...........................................#...............##...................................#...
......................#..............#...#........................#........................................#......................
............#..............#...#.....#.....#..........#...........................#........#...............#......................
..................#............................#....#................................................................#............
..#........................#.............................#......#...............#....#...........#................................
.................................................#................................................#..................#........#...
.#......#.........................................................#...........#...#.......................#.......................
..........................................#.......##........#................................................#..##............##..
..............#...#....................................................................#........#...........................#.....
................#....................................................................#........................................###.
....#............................................#........................#.................#........#.....#...#.....#.#....#.....
...##..........#..................................................................................................................
#....#.........#....................#.#.........................#..........##.......#....#..#....................#................
........#.........#..........#.................#..................#................................#.......#................#...#.
.#..........................................#..#..#......#................................#.#.#..#................................
....#.......#.........#............................................................#....#.........................................
.....................................................................#...#......................#.................................
............#.....#.....#..........#...............................................................................#..............
.........................#...#.#.......#....................................................................#.................#...
......................................................#.#..........................#...#................#.........................
.....#.........#.........#..............................................................#...................#.#......#............
.......................................#......#.......................#.................................................#.....#...
.....#....#.......................................................................................................................
#..........#....#....................................#.............#...............#...................#..........#...............
..#....................................##.....................................#...............................#...................
....#..................................#........................#.................................................................
....#................................................................................................#...................#........
....#................................................................................#............................................
..........#.....#...................#.......................#......#..............................................................
#...................#..........#............................................................#............#..............#.........
...#...#....#................................#............................#.##.....................................#..............
..........#.........#.....#...........#............................#...............#.#....#................#....................##
.....#...................................................#........................................................................
............##....................................#..................#.#..#.....................#.........#....##......#...#......
...........#.......#....................#.......................#..#.................#.......#.........#..........................
#.....................#..#..............................................................................................#.........
....#....#..............#............##....................................................^.................#..............#.....
.........#......................................................#..............#............#...#......#....#.....................
.......##...................#...........#.........#.......................................#..........................#............
.#........#.#........................#...........#............#..#........#........#.............#................................
..................##........##.................................................................................#................#.
...#...................#.....#...........#.........#..#............#..................................#.....#.....................
.................#.........#..........#............#......#.........................#.............#.......#......................#
.................................................................#...............#.....#.#....#...................................
..........................#...........................................................................................#..#........
..............#.................................................................................##......................#.........
....#...#....................#...............................................#................#............#......................
........................................................................#........#................................................
....#.....#......................#.......#............#......................................#..................................#.
................#................................#.#.............#.#.........#..............................................#.....
..............#..................#...#...........................................................................#................
...#..........#....................................................#...............................#...........#.......#..........
...................................#....................#..#.#........#..#.......................#...#.....#......................
.......#.....#.#.......#....#............#...............#..........#.................#........#.#................................
.....#....#.........#........#.......#............................................................................................
..#........#......#............................................................#..........#...............................#.......
..#..#...................................#....................#...#.#................#......................#.....................
....................................#......#.....................#...........#.....................#........#.....................
.#..................#.........................................................................................................#...
..............#...........#.#....#..#......#..#.#...#.#.........................................................................#.
...#............##.......................................................#.......................#..#.............................
......#........#..........#..#.#........#.....................#...................................................................
...#...........#.........................................#............#.............#....#.....................................#..
...........#.....................#......................................................................................#.........
.......#..............#...............#............#..........................#............................#........##............
.............#..........#..............................................#................#..............................#..........
...............#..............................#.................#.....#................#....#.....................................
............#.................#..........#........#............#..#......#.......................#....#...#.#...#.#...............
.......#.#...................................##..............#.....#.....................#.................................##.....
..#..#...#...#....#.............#..#.....................................................................................#........
......#......................#...#...#..........#......................................#.................#....#.................#.
.......#...........#...........#...................#..............................#.......................................#.......
......#.......................................#...............................................#.........#........#....#.........##
......#.................................................................#...#............#..........#.............................
.....................................#..........#.........#.....#.............#...........#.......................................
.#.....................................#......................#.....#..#.........................................................."""

array = """....#.....
.........#
..........
..#.......
.......#..
..........
.#.#^.....
........#.
#.........
......#..."""
array = """....#.....
.........#
..........
..#.......
.......#..
..........
.#..^.....
........#.
#.........
......#..."""

list_array = array.split("\n")


def make_array(one_array):
    array_int = []
    for char in one_array:
        if char == ".":
            array_int.append(0)
        elif char == "#":
            array_int.append(1)
        elif char == "^":
            array_int.append(-1)
        elif char == ">":
            array_int.append(-2)
        # elif char =="":
        #     array_int.append(-1)
        elif char == "<":
            array_int.append(-4)
        else:
            raise Exception("ERREUR")
    return np.array(array_int)


def create_matrix():
    matrix = None
    for one_array in list_array:
        new_array = make_array(one_array)
        if matrix is None:
            matrix = new_array
        else:
            matrix = np.vstack((matrix, new_array))
    return matrix


# %%
matrix = create_matrix()
# plt.imshow(matrix)
# %%
# Initi variables
matrix = create_matrix()
# guard_list_x, guard_list_y = [], []
plt.imshow(matrix)
plt.title("Initial position")
plt.show()


def find_pos_guard(matrix):
    facing = None
    x, y = np.where(matrix < 0)
    x = x[0]
    y = y[0]
    if matrix[x, y] == -1:
        facing = "up"
    if matrix[x, y] == -2:
        facing = "right"
    if matrix[x, y] == -3:
        facing = "down"
    if matrix[x, y] == -4:
        facing = "left"
    return x, y, facing


def find_next_positions(matrix, x, y, facing):
    next_guard_positions, x_arr, y_arr = None, None, None
    if facing == "up":
        next_guard_positions = matrix[:x, y][::-1]
        x_arr = np.arange(x)[::-1]
        y_arr = np.ones(x_arr.shape[0], dtype=np.int32) * y
    elif facing == "down":
        next_guard_positions = matrix[x + 1 :, y]
        x_arr = np.arange(x, matrix.shape[0]) + 1
        y_arr = np.ones(x_arr.shape[0], dtype=np.int32) * y
    elif facing == "right":
        next_guard_positions = matrix[x, y + 1 :]
        y_arr = np.arange(y, matrix.shape[1]) + 1
        x_arr = np.ones(y_arr.shape[0], dtype=np.int32) * x
    elif facing == "left":
        next_guard_positions = matrix[x, :y][::-1]
        y_arr = np.arange(y)[::-1]
        x_arr = np.ones(y_arr.shape[0], dtype=np.int32) * x
    else:
        raise Exception(f"Not a valid poistion error got {facing} position")
    return next_guard_positions, x_arr, y_arr


def get_new_orientation(facing):
    new_facing = None
    if facing == "up":
        new_facing = "right"
    elif facing == "right":
        new_facing = "down"
    elif facing == "down":
        new_facing = "left"
    elif facing == "left":
        new_facing = "up"
    else:
        raise Exception("not valid facing")
    return new_facing


def append_to_visited(list_x, list_y,visited_loc,debug=False):
    count=0
    if debug:
        print(f"list_x={list_x}")
    for x, y in zip(list_x, list_y):
        previous_passage.append((x,y))
        if (x, y) not in visited_loc:
            visited_loc.append((x, y))
            count+=1
    # if debug:
    #     print(f"Added {count} visited locations, now contains {len(visited_loc)}")
    return visited_loc

def move_guard(matrix, x, y, facing,visited_loc, plot=True, debug=False):
    is_finish = False
    next_guard_pos, facing_x, facing_y = find_next_positions(
        matrix, x, y, facing=facing
    )
    if debug:
        print(
            f"Now facing is {facing} and \nvalues={next_guard_pos}\nfacing_x={facing_x}\nfacing_y={facing_y}"
        )
    matrix[x, y] = 0
    index_wall = np.where(next_guard_pos == 1)[0]
    if len(index_wall) == 0:
        is_finish = True
        visited_loc=append_to_visited(facing_x,facing_y,visited_loc)
        return matrix, x, y, facing, is_finish
    else:
        i = index_wall[0] - 1
        if debug:
            print(f"np.where(next_guard_pos == 1)[0]={index_wall[0]}")
        x, y = facing_x[i], facing_y[i]
        visited_loc=append_to_visited(facing_x[:index_wall[0]],facing_y[:index_wall[0]],visited_loc)

    matrix[x, y] = -1
    facing = get_new_orientation(facing)
    if debug:
        print(f"At end of advance, facing={facing}")
    if plot:
        plt.imshow(matrix)
        plt.title(f"Parcouru {len(facing_x)} positions")
        plt.show()
    return matrix, x, y, facing, is_finish


def move_guard_until_arrived(matrix,debug=False,plot=False):
    visited_loc = []
    x, y, facing = find_pos_guard(matrix=matrix)
    is_finish = False
    compteur = 0
    while not is_finish and compteur < 50:
        if debug:
            print("-"*50)
            print(f"Compteur={compteur}")
        matrix, x, y, facing, is_finish = move_guard(
            matrix, x, y, facing,visited_loc, debug=debug, plot=plot
        )
        compteur += 1
    if is_finish:
        print(f"Got out in {compteur} tries")
    else:
        print(f"Fail to got out in {compteur} tries")
    if debug:
        print(f"Visited {len(visited_loc)} plus inital position")
    return is_finish,matrix,visited_loc

previous_passage=[]
is_finish,matrix,visited_loc = move_guard_until_arrived(matrix)
#%%
# def is_turning_en_rond(matrix,x,y):
    
# %%
def show_visited(matrix,visited_loc):
    for elem in visited_loc:
        try:
            matrix[elem]=-2
        except:
            a=0
    # matrix[visited_loc[-1]]=-10
    plt.imshow(matrix)
# show_visited(matrix[:30,:30])
show_visited(matrix,visited_loc)

# 5515 to low
# %%

## Part 2

# Prendre toutes les visited positions du garde
# Pour chaque position mettre un block sur la position et voir si on a une infine loop

# Visiter toutes les positions visited_loc
# Pour chaque position on fait run l'algo et on regarde si il ressort pas 

def update_default_matrix(original_matrix,new_wall):
    new_matrix=original_matrix
    new_matrix[new_wall]=1
    return new_matrix

compteur_not_finish=0
for visited_guard_loc in visited_loc[:-1]:
    print("*"*80)
    matrix=create_matrix()
    new_matrix=update_default_matrix(matrix,visited_guard_loc)
    is_finish,matrix,locations = move_guard_until_arrived(matrix,debug=True,plot=True)
    if not is_finish:
        compteur_not_finish+=1
print(f"Didn't finish for {compteur_not_finish} locations")
    # plt.imshow(new_matrix)
    # plt.show()
# %%
